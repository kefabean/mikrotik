
# Internal global dhcp variables

# leaseBound - set to "1" if bound, otherwise set to "0"
# leaseServerName - dhcp server name
# leaseActMAC - active mac address
# leaseActIP - active IP address
# lease-hostname - client hostname
# lease-options - array of received options

:local leaseComment "dhcp-script-managed-$leaseServerName-$leaseActMAC"
:local leaseHostname $"lease-hostname"
:local leaseOptions [:tostr $"lease-options"]

:log info "leaseBound: $leaseBound\nleaseServerName: $leaseServerName\nleaseActMAC: $leaseActMAC\nleaseActIP: $leaseActIP\nlease-hostname: $leaseHostname\nlease-options: $leaseOptions"


# for securely accessing servers use the DNS name that includes the vlan
# suffix (eg. remote.home) instead of the convenience hostname (eg. remote)
# this can't be accidently overwritten by a device in another vlan (eg. a guest device)
:local leaseHostnames ("$leaseHostname.$leaseServerName,$leaseHostname")

:if ([:len [/ip dns static find comment~"$leaseComment.*" and address="$leaseActIP"]] > 0)

# remove all DNS entries with IP address of DHCP lease
/ip dns static remove [/ip dns static find comment="$leaseComment" and address="$leaseActIP"]
:foreach h in=[:toarray value="$leaseHostnames"] do={
  # remove all DNS entries with hostname of DHCP lease
  /ip dns static remove [/ip dns static find comment="$leaseComment" and name="$h"]
  /ip dns static remove [/ip dns static find comment="$leaseComment" and address="$leaseActIP" and name="$h"]
  :if (($leaseBound = "1") && ([:len $leaseHostname] > 0)) do={
    :delay 1
    /ip dns static add comment="$leaseComment" address="$leaseActIP" name="$h" ttl="00:05:00"
    /tool e-mail send to="daniel@kefa.uk" subject="Alert - new device added ($leaseHostname)" body="A new device $leaseHostname with MAC address $leaseActMAC has been added to the $leaseServerName network and has been assigned the $leaseActIP IP address."
  }
}
